from pydantic import BaseModel, Field


class TranscriptionResult(BaseModel):
    """Result of the audio transcription process."""

    job_id: str
    gcs_uri: str
    text: str = Field(description="The text transcribed from the audio.")


class ExplanationOutput(BaseModel):
    """
    The structured data generated by the LLM in ExplainerAgent.
    This model is used as the `output_schema` for the LlmAgent to enforce
    a JSON output format.
    """

    child_explanation: str = Field(description="子供向けの解説文")
    child_explanation_ssml: str = Field(description="子供向けの解説文 (SSML形式)")
    parent_hint: str = Field(description="親向けの対話のヒント")
    illustration_prompt: str = Field(description="イラスト生成用の英語プロンプト")
    keywords: list[str] = Field(description="イラストの主要要素を表す英単語リスト")
    needs_clarification: bool = Field(description="追加の確認が必要かどうか")
    clarification_question: str | None = Field(
        default=None, description="追加の確認が必要な場合の質問文"
    )


class ExplanationResult(ExplanationOutput):
    """The complete result of the explanation generation, including metadata."""

    job_id: str
    original_text: str


class IllustrationResult(BaseModel):
    """Result of the illustration generation process."""

    job_id: str
    image_gcs_path: str = Field(
        description="The GCS path of the generated illustration."
    )


class NarrationResult(BaseModel):
    """Result of the speech synthesis process."""

    job_id: str
    final_audio_gcs_path: str = Field(
        description="The GCS path of the generated narration audio."
    )


# ==============================
# Request / Response Models
# ==============================
class JobRequest(BaseModel):
    prompt: str


class JobResponse(BaseModel):
    job_id: str
    status: str


class JobResultResponse(BaseModel):
    job_id: str
    status: str
    result: str | None = None
    gcs_output: str | None = None


# ==============================
# CloudEvent Models
# ==============================
class CloudEventMetadata(BaseModel):
    """The 'metadata' field within the CloudEvent data payload."""

    jobId: str
    userId: str


class StorageObjectData(BaseModel):
    """The 'data' field of a CloudEvent from Cloud Storage."""

    bucket: str
    name: str
    metadata: CloudEventMetadata
